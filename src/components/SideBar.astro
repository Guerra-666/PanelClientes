---
export interface Props {
  currentPage?: string;
}

const { currentPage = "dashboard" } = Astro.props;

const menuItems = [
  { id: 'dashboard', label: 'Dashboard', icon: 'M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6' },
  { id: 'perfil', label: 'Mi Perfil', icon: 'M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z' },
  { id: 'servicios', label: 'Servicios', icon: 'M5 12h14M5 12a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v4a2 2 0 01-2 2M5 12a2 2 0 00-2 2v4a2 2 0 002 2h14a2 2 0 002-2v-4a2 2 0 00-2-2m-2-4h.01M17 16h.01' },
  { id: 'tickets', label: 'Tickets', icon: 'M16 8v8M8 8v8M4 6h16a2 2 0 012 2v8a2 2 0 01-2 2H4a2 2 0 01-2-2V8a2 2 0 012-2z' },
  { id: 'facturacion', label: 'Facturación', icon: 'M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z' },
  { id: 'configuracion', label: 'Configuración', icon: 'M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z M15 12a3 3 0 11-6 0 3 3 0 016 0z' }
];
---

<aside class="w-64 bg-white border-r border-gray-200 min-h-screen">
  <nav class="p-4">
    <ul class="space-y-2">
      {menuItems.map(item => (
        <li>
          <a 
            href={item.id === 'dashboard' ? '/' : `/${item.id}`}
            class={`w-full flex items-center justify-start px-3 py-2 rounded-lg text-sm font-medium transition-colors ${
              currentPage === item.id 
                ? 'bg-gray-100 text-gray-900' 
                : 'text-gray-600 hover:bg-gray-50 hover:text-gray-900'
            }`}
          >
            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={item.icon}/>
            </svg>
            <span>{item.label}</span>
          </a>
        </li>
      ))}
    </ul>
  </nav>
</aside>
<!--

=== INTERFAZ PROPS ===
- currentPage?: Página actual activa (string opcional, default: "dashboard")

=== DATOS DEL MENÚ ===
- menuItems: Array de objetos con id, label e icon (path SVG)
- Navegación condicional: Dashboard va a "/" y otros van a "/{id}"

=== CONTENEDOR PRINCIPAL (aside) ===
- w-48: Ancho fijo de 12rem (192px)
- bg-white: Fondo blanco
- border-r: Borde derecho
- border-gray-200: Color del borde en gris claro
- min-h-screen: Altura mínima del viewport completo

=== CONTENEDOR INTERNO ===
- p-4: Padding de 1rem (16px) en todos los lados

=== NAVEGACIÓN ===
- space-y-1: Espacio vertical de 0.25rem (4px) entre elementos hijos

=== ENLACES DEL MENÚ (estado base) ===
- flex: Display flex
- items-center: Alinea elementos verticalmente al centro
- space-x-2: Espacio horizontal de 0.5rem (8px) entre icono y texto
- px-2: Padding horizontal de 0.5rem (8px)
- py-1.5: Padding vertical de 0.375rem (6px)
- rounded-lg: Bordes redondeados grandes
- text-sm: Tamaño de texto pequeño (14px)
- font-medium: Peso de fuente medium
- transition-colors: Transición suave en cambios de color

=== ESTADOS CONDICIONALES ===
PÁGINA ACTIVA (currentPage === item.id):
- bg-gray-100: Fondo gris claro
- text-gray-900: Texto gris muy oscuro

PÁGINA INACTIVA:
- text-gray-600: Texto gris medio
- hover:bg-gray-50: Al hover, fondo gris muy claro
- hover:text-gray-900: Al hover, texto gris muy oscuro

=== ICONOS SVG ===
- w-4 h-4: Tamaño de 1rem x 1rem (16px)
- fill="none": Sin relleno
- stroke="currentColor": Usa el color del texto actual
- viewBox="0 0 24 24": Vista del SVG 24x24
- stroke-linecap="round": Extremos de línea redondeados
- stroke-linejoin="round": Uniones de línea redondeadas
- stroke-width="2": Grosor de línea de 2px

=== FUNCIONALIDAD ===
- .map(): Itera sobre menuItems para crear enlaces dinámicamente
- Template literal con clases condicionales usando operador ternario
- Renderizado dinámico del path SVG con {item.icon}
- Navegación inteligente: Dashboard → "/" | Otros → "/{item.id}"
-->